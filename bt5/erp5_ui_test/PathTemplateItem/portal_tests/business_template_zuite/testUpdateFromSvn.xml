<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="ZopePageTemplate" module="Products.PageTemplates.ZopePageTemplate"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_text</string> </key>
            <value> <unicode encoding="cdata"><![CDATA[

<html xmlns:tal="http://xml.zope.org/namespaces/tal"\n
      xmlns:metal="http://xml.zope.org/namespaces/metal">\n
<head>\n
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">\n
<title>Test Update From Svn (expected failure)</title>\n
</head>\n
<body>\n
<table cellpadding="1" cellspacing="1" border="1">\n
<thead>\n
<tr><td rowspan="1" colspan="3">Test update from svn (You\n
      must have checkout a copy of test_core in your svn dir) (expected failure)</td></tr>\n
</thead><tbody>\n
<tal:block tal:condition="python: context.TestTool_getSkinName()!=\'Mobile\'">\n
<tal:block metal:use-macro="here/BTZuite_CommonTemplate/macros/init" />\n
\n
<tr>\n
  <td>open</td>\n
  <td>${base_url}/portal_templates/TemplateTool_viewUpdateRepositoryBusinessTemplateListDialog</td>\n
  <td></td>\n
</tr>\n
<tr>\n
  <td>clickAndWait</td>\n
  <td>document.forms[0].elements[\'Base_callDialogMethod:method\'][1]</td>\n
  <td></td>\n
</tr>\n
<tr>\n
  <td>assertTextPresent</td>\n
  <td>Business templates updated successfully.</td>\n
  <td></td>\n
</tr>\n
<tr>\n
  <td>open</td>\n
  <td>${base_url}/portal_templates/TemplateTool_callViewInstallRepositoryBusinessTemplateListDialog</td>\n
  <td></td>\n
</tr>\n
<tr>\n
  <td>click</td>\n
  <td>//tr[@class=\'listbox-data-line-5 DataB\']//input[@type=\'checkbox\']</td>\n
  <td></td>\n
</tr>\n
<tr>\n
  <td>clickAndWait</td>\n
  <td>document.forms[0].elements[\'Base_callDialogMethod:method\'][1]</td>\n
  <td></td>\n
</tr>\n
<tr>\n
  <td>clickAndWait</td>\n
  <td>document.forms[0].elements[\'Base_callDialogMethod:method\'][1]</td>\n
  <td></td>\n
</tr>\n
<tr>\n
  <td>assertTextPresent</td>\n
  <td>Business Template test_core installed</td>\n
  <td></td>\n
</tr>\n
<tr>\n
  <td>open</td>\n
  <td>${base_url}/foo_module/Zuite_waitForActivities</td>\n
  <td></td>\n
</tr>\n
<tr>\n
  <td>assertTextPresent</td>\n
  <td>Done.</td>\n
  <td></td>\n
</tr>\n
<tr>\n
  <td>open</td>\n
  <td>${base_url}/portal_templates/view</td>\n
  <td></td>\n
</tr>\n
<tr>\n
  <td>type</td>\n
  <td>listbox_title</td>\n
  <td>test_core</td>\n
</tr>\n
<tr>\n
  <td>clickAndWait</td>\n
  <td>hidden_button</td>\n
  <td></td>\n
</tr>\n
<!--\n
XXX (Ivan): Disable Revert & Update Business Template from VCS as this requires respective\n
proper "Working Copy List" settings in preferences (otherwise Unauthorized is raised and UI test run is blocked). \n
As tests are executed under SlapOS environment this is still not properly defined how to do.\n
-->\n
\n
<!--\n
<tr>\n
  <td>clickAndWait</td>\n
  <td>link=Installed</td>\n
  <td></td>\n
</tr>\n
<tr>\n
  <td>selectAndWait</td>\n
  <td>select_action</td>\n
  <td>label=Revert & Update Business Template from VCS</td>\n
</tr>\n
<tr>\n
  <td>clickAndWait</td>\n
  <td>dialog_submit_button</td>\n
  <td></td>\n
</tr>\n
-->\n
<tr>\n
  <td>open</td>\n
  <td tal:content="string: ${here/portal_url}/foo_module/BTZuite_reset?end=1"/>\n
  <td></td>\n
</tr>\n
<tr>\n
  <td>assertTextPresent</td>\n
  <td>Reset Successfully.</td>\n
  <td></td>\n
</tr>\n
</tal:block>\n
</body>\n
</html>

]]></unicode> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>text/html</string> </value>
        </item>
        <item>
            <key> <string>expand</string> </key>
            <value> <int>0</int> </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>testUpdateFromSvn</string> </value>
        </item>
        <item>
            <key> <string>output_encoding</string> </key>
            <value> <string>utf-8</string> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <unicode></unicode> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
